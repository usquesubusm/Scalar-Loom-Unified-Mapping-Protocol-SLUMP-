// The Scalar Loom Unified Mapping Protocol V1.0 August 14, 2025
//# Honey License v1.2 — Symbolic Commons Operating Agreement (compat. CC BY-NC-SA 4.0)

#!/usr/bin/env python3
# Honey License v1.2 — Symbolic Commons Operating Agreement (compat. CC BY-NC-SA 4.0)
import csv, sys, math

path = sys.argv[1] if len(sys.argv) > 1 else "sproot_thermo_log.csv"
rows = []
with open(path, newline="") as f:
    rows = list(csv.DictReader(f))

if not rows:
    print("No rows found in", path); sys.exit(1)

def f(name, row):
    try: return float(row[name])
    except: return float("nan")

rs_vals  = [f("R_s", r) for r in rows]
psi_vals = [f("Psi_s", r) for r in rows]

def mean(xs): xs=[x for x in xs if not math.isnan(x)]; return sum(xs)/len(xs) if xs else float("nan")
print("Rows:", len(rows))
print("Mean R_s:",  round(mean(rs_vals), 3))
print("Mean Psi_s:",round(mean(psi_vals),3))

# Quick consistency check for a few rows
bad = 0
for r in rows[:5]:
    Cr, E, D, L = f("Cr", r), f("E", r), f("D", r), f("L", r)
    Rs_logged   = f("R_s", r)
    denom = max(D + L, 1e-12)
    Rs_calc = (Cr * E) / denom
    if abs(Rs_calc - Rs_logged) > 1e-6:
        bad += 1
print("Consistency check mismatches (first 5 rows):", bad)
